{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "CMake: build",
            "type": "shell",
            "command": "${workspaceFolder}/dev_tools/build.sh",
            "options": {
                "shell": {
                    "executable": "nix",
                    "args": [
                        "develop",
                        "-c",
                        "zsh"
                    ]
                }
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Call build.sh with nix develop"
        },
        {
            "label": "pre-pytest",
            "type": "shell",
            "command": "${workspaceFolder}/dev_tools/pre-pytest.sh",
            "options": {
                "shell": {
                    "executable": "nix",
                    "args": [
                        "develop",
                        "-c",
                        "zsh"
                    ]
                }
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Call pre-pytest.sh with nix develop"
        },
        {
            "label": "CMake: build test.cpp",
            "type": "shell",
            "command": "${workspaceFolder}/.nix-pyenv/bin/clang++",
            "args": [
                "${workspaceFolder}/test.cpp",
                "-msse4.1",
                "-o",
                "${workspaceFolder}/build/a.out",
                "-g"
            ],
            "options": {
                "shell": {
                    "executable": "nix",
                    "args": [
                        "develop",
                        "--command",
                        "zsh",
                        "-c"
                    ],
                }
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Call build.sh with nix develop"
        }
    ]
}